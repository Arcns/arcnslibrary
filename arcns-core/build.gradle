//ext.module_group = "com.github.Arcns.arcnslibrary"
////ext.module_name = "arcns-core"
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'

// 引入jcenter仓库
//apply plugin: 'com.novoda.bintray-release'

android {
    namespace 'com.arcns.core'
    compileSdkVersion versions.compile_sdk
    buildToolsVersion versions.build_tools

    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.compile_sdk
        versionCode versions.publish_code
        versionName versions.publish_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        // 启用databinding，与kotlin一起使用时，必须引入：apply plugin: 'kotlin-kapt'
        enabled = true
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
    }
}

// jcenter仓库配置
//publish {
//    userOrg = 'xinyangzaikongzhongpiaoyang' //bintray注册的用户名（不是邮箱）
//    groupId = module_group
//    artifactId = module_name //项目名称
//    publishVersion = versions.publish_name //版本号
//    desc = 'https://github.com/Arcns/arcnslibrary' //项目描述。可空。
//    website = 'https://github.com/Arcns/arcnslibrary' //项目地址，通常填github地址。可空。
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin.stdlib
    implementation deps.androidx.appcompat
    implementation deps.androidx.ktx
    // activity
    implementation 'androidx.activity:activity-ktx:1.6.1'
    // 反射
    implementation deps.kotlin.reflect
    // 相对布局
    implementation deps.androidx.constraint_layout
    // Navigation Kotlin (仅编译，若项目需要使用到，需要在项目中自行引用)
    // 开启navigation需要配置三个地方：module.gradle页面顶部apply、module.gradle页面dependencies、project.gradle页面的classpath
    compileOnly deps.androidx.nav_fragment_ktx
    compileOnly deps.androidx.nav_ui_ktx
    // Fragment
//    implementation deps.androidx.fragment_ktx
    // ViewModel and LiveData
    implementation deps.androidx.lifecycle_viewmodel
    implementation deps.androidx.lifecycle_livedata
    // viewpager2
    implementation deps.androidx.viewpager2
    // 弹出框(仅编译，若项目需要使用到，需要在项目中自行引用)
    compileOnly deps.afollestad.md_core
    compileOnly deps.afollestad.md_lifecycle
    compileOnly deps.afollestad.md_datetime
    compileOnly deps.afollestad.md_bottomsheets
    // okHttp
    implementation deps.okhttp.okhttp
    implementation deps.okhttp.logging_interceptor
    // 图片加载库
    implementation deps.glide
    annotationProcessor deps.glide_compiler
    implementation deps.picasso
    // Gson
    implementation deps.gson
    // 事件传递
    implementation deps.eventbus
    // 图片压缩大小
    implementation deps.compressor
    // 文件操作
    api deps.xfile
    // 悬浮窗权限(仅编译，若项目需要使用到，需要在项目中自行引用)
    compileOnly deps.draw_overlays
}
